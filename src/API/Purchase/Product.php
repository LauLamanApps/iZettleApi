<?php

declare(strict_types=1);

namespace LauLamanApps\IzettleApi\API\Purchase;

use LauLamanApps\IzettleApi\API\Image;
use LauLamanApps\IzettleApi\API\Universal\Vat;
use Money\Money;
use Ramsey\Uuid\Uuid;
use Ramsey\Uuid\UuidInterface;

final class Product
{
    /**
     * @var UuidInterface|null
     */
    private $productUuid;

    /**
     * @var UuidInterface|null
     */
    private $variantUuid;

    /**
     * @var string|null
     */
    private $name;

    /**
     * @var string|null
     */
    private $variantName;

    /**
     * @var int
     */
    private $quantity;

    /**
     * @var Money
     */
    private $unitPrice;

    /**
     * @var Vat|null
     */
    private $vat;

    /**
     * @var Money
     */
    private $rowTaxableAmount;

    /**
     * @var Image|null
     */
    private $imageLookupKey;

    /**
     * @var bool
     */
    private $autoGenerated;

    /**
     * @var bool
     */
    private $libraryProduct;


    public function __construct(
        ?UuidInterface $productUuid = null,
        ?UuidInterface $variantUuid = null,
        ?string $name = null,
        ?string $variantName = null,
        int $quantity,
        Money $unitPrice,
        ?Vat $vat = null,
        Money $rowTaxableAmount,
        ?Image $imageLookupKey = null,
        bool $autoGenerated,
        bool $libraryProduct
    ) {
        $this->productUuid = $productUuid;
        $this->variantUuid = $variantUuid;
        $this->name = $name;
        $this->variantName = $variantName;
        $this->quantity = $quantity;
        $this->unitPrice = $unitPrice;
        $this->vat = $vat;
        $this->rowTaxableAmount = $rowTaxableAmount;
        $this->imageLookupKey = $imageLookupKey;
        $this->autoGenerated = $autoGenerated;
        $this->libraryProduct = $libraryProduct;
    }

    public function getProductUuid()
    {
        return $this->productUuid;
    }

    public function getVariantUuid()
    {
        return $this->variantUuid;
    }

    public function getName()
    {
        return $this->name;
    }

    public function getVariantName()
    {
        return $this->variantName;
    }

    public function getQuantity(): int
    {
        return $this->quantity;
    }

    public function getUnitPrice(): Money
    {
        return $this->unitPrice;
    }

    public function getVat(): ?Vat
    {
        return $this->vat;
    }

    public function getRowTaxableAmount(): Money
    {
        return $this->rowTaxableAmount;
    }

    public function getImageLookupKey()
    {
        return $this->imageLookupKey;
    }

    public function isAutoGenerated(): bool
    {
        return $this->autoGenerated;
    }

    public function isLibraryProduct(): bool
    {
        return $this->libraryProduct;
    }
}
